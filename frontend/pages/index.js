import { useState } from 'react';

export default function Home() {
  const [medical, setMedical] = useState(null);
  const [provider, setProvider] = useState(null);
  const [claim, setClaim] = useState(null);
  const [loading, setLoading] = useState(false);
  const [result, setResult] = useState(null);

  const allUploaded = medical && provider && claim;

  const handleSubmit = async () => {
    if (!allUploaded) return;
    const formData = new FormData();
    formData.append('medical', medical);
    formData.append('provider', provider);
    formData.append('claim', claim);

    setLoading(true);
    const res = await fetch('http://localhost:8000/assess', {
      method: 'POST',
      body: formData,
    });
    const data = await res.json();
    setResult(data);
    setLoading(false);
  };

  return (
    <div className="bg-netcare-gradient min-h-screen flex flex-col">
      <header className="netcare-header text-netcare-white px-6 py-4">
        <h1 className="text-2xl font-semibold">NetcarePlus GapCare Assessment</h1>
      </header>

      <section className="py-10 text-center">
        <h2 className="text-3xl font-bold text-netcare-primary mb-2">GapCare Claim Pre-Assessment</h2>
        <p className="text-netcare-secondary">Upload your documents to run the assessment</p>
      </section>

      <main className="max-w-2xl mx-auto w-full flex-grow">
        <div className="netcare-card p-6 space-y-4">
          <div>
            <label className="block mb-1 text-netcare-primary">Medical Scheme Statement</label>
            <input className="netcare-input w-full" type="file" accept="application/pdf" onChange={e => setMedical(e.target.files[0])} />
          </div>
          <div>
            <label className="block mb-1 text-netcare-primary">Provider Invoice</label>
            <input className="netcare-input w-full" type="file" accept="application/pdf" onChange={e => setProvider(e.target.files[0])} />
          </div>
          <div>
            <label className="block mb-1 text-netcare-primary">Claim Form</label>
            <input className="netcare-input w-full" type="file" accept="application/pdf" onChange={e => setClaim(e.target.files[0])} />
          </div>
          <button className="netcare-button px-6 py-3 rounded-md disabled:opacity-50" onClick={handleSubmit} disabled={loading || !allUploaded}>
            {loading ? 'Processing...' : 'Run Pre-Assessment'}
          </button>
        </div>

        {result && (
          <div className="netcare-card p-6 mt-8 space-y-4">
            <h3 className="text-xl font-semibold">Assessment Result</h3>
            <pre className="whitespace-pre-wrap">{JSON.stringify(result.result, null, 2)}</pre>
            {result.pdf && (
              <a className="netcare-button-outline px-4 py-2 rounded-md inline-block" href={`data:application/pdf;base64,${result.pdf}`} download="assessment.pdf">
                Download PDF Report
              </a>
            )}
          </div>
        )}
      </main>

      <footer className="netcare-footer text-center text-netcare-white">
        <p>DEMO ASSESSMENT ONLY - HUMAN AUDIT REQUIRED BEFORE PAYMENT</p>
        <p className="text-sm text-netcare-muted mt-2">This assessment is generated by an AI system and should be reviewed by a qualified claims assessor.</p>
      </footer>
    </div>
  );
}
